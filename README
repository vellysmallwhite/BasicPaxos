This project implements a Paxos consensus algorithm for distributed agreement. The code is designed to run in a Dockerized environment, simulating multiple nodes in a distributed system. Each node acts as a Paxos process (either Proposer, Acceptor, or Learner) and communicates with others to achieve consensus.

Prerequisites
Docker and Docker Compose should be installed on your system.
Building and Running the Code

Step 1: Build the Docker Image
To build the Docker image, run the following command in the project directory:

docker build . -t prj4

Step 2: Run the Test Cases
After building the Docker image, you can run the test cases using Docker Compose. Replace docker-compose-testcase-1.yml with the desired test case configuration file.

To run test case 1:


docker compose -f docker-compose-testcase-1.yml up
docker compose -f docker-compose-testcase-1.yml down
docker compose -f docker-compose-testcase-2.yml up
docker compose -f docker-compose-testcase-2.yml down


Process Roles: Each node is configured as a Proposer, Acceptor, or Learner based on the configuration file provided to each container.
Quorum Requirement: The Paxos algorithm ensures a majority quorum (more than half) for a proposal to be accepted. The program dynamically calculates the required quorum based on the number of acceptors.
Consensus Value Selection: The Proposer selects the highest proposal numberâ€™s accepted value among received promises. If no previous value exists, it proposes its initial value.
Output Formatting: Output messages are formatted in JSON, ensuring that logs remain consistent and readable.